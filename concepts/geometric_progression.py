import math

def show_geometric_progression(base, max_value):
    print(f"\nüìà –ì–µ–æ–º–µ—Ç—Ä–∏—á–Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å–∏—è —Å –æ—Å–Ω–æ–≤–∞ {base} –¥–æ —Å—Ç–æ–π–Ω–æ—Å—Ç {max_value}:")
    value = 1
    step = 0
    while value <= max_value:
        print(f"–°—Ç—ä–ø–∫–∞ {step}: {base}^{step} = {value}")
        value *= base
        step += 1

def show_logarithm(base, number):
    result = math.log(number, base)
    print(f"\nüßÆ log_{base}({number}) = {result:.2f}")
    print(f"‚û°Ô∏è –¢–æ–≤–∞ –æ–∑–Ω–∞—á–∞–≤–∞: {base}^{result:.2f} ‚âà {number}")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
base = 2
max_value = 64
number = 32

# –ü–æ–∫–∞–∑–≤–∞–Ω–µ
show_geometric_progression(base, max_value)
show_logarithm(base, number)
